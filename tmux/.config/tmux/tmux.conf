set-option -sa terminal-overrides ",xterm*:Tc"
set -g mouse on
unbind C-b
set -g prefix M-Space
bind M-Space send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-u' if-shell "$is_vim" 'send-keys M-u'  'select-pane -L'
bind-key -n 'M-e' if-shell "$is_vim" 'send-keys M-e'  'select-pane -D'
bind-key -n 'M-i' if-shell "$is_vim" 'send-keys M-i'  'select-pane -U'
bind-key -n 'M-a' if-shell "$is_vim" 'send-keys M-a'  'select-pane -R'

bind x kill-pane
bind c new-window -c "~/.local/scripts/tmux/test"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind-key -n 'M-U' previous-window
bind-key -n 'M-A' next-window
bind-key -n 'M-z' resize-pane -Z

bind-key -T copy-mode-vi 'M-u' select-pane -L
bind-key -T copy-mode-vi 'M-e' select-pane -D
bind-key -T copy-mode-vi 'M-i' select-pane -U
bind-key -T copy-mode-vi 'M-a' select-pane -R

bind-key -r f run-shell "tmux neww ~/.local/scripts/tmux-scripts/tmux-sessionizer"


# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

set -g @plugin 'tmux-plugins/tpm'
set -g @catppuccin_flavour 'mocha'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.config/tmux/plugins/tpm/tpm'
